---
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';

interface Props {
    frontmatter: {
        title: string;
        postDate: string;
        description: string;
        author: string;
        image?: {
            url: string;
            alt: string;
        };
        tags?: string[];
    };
}

const { frontmatter } = Astro.props;

const metaTags = [
    { name: "description", content: frontmatter.description },
    { property: "og:title", content: frontmatter.title },
    { property: "og:description", content: frontmatter.description },
    { property: "og:type", content: "article" },
    frontmatter.image && {
        property: "og:image",
        content: frontmatter.image.url
    }
].filter(Boolean);
---

<div class="blog-post">
    <Header />
    <article class="section">
        <div class="container">
            <div class="columns is-centered">
                <div class="column is-8">
                    <header class="post-header">
                        <h1 class="title is-1 has-text-centered">{frontmatter.title}</h1>
                        <div class="post-meta has-text-centered">
                            <time datetime={frontmatter.postDate}>
                                {new Date(frontmatter.postDate).toLocaleDateString('es-ES', {
                                    year: 'numeric',
                                    month: 'long',
                                    day: 'numeric'
                                })}
                            </time>
                            {frontmatter.tags && (
                                <div class="tags is-centered mt-4">
                                    {frontmatter.tags.map(tag => (
                                        <span class="tag">{tag}</span>
                                    ))}
                                </div>
                            )}
                        </div>
                    </header>

                    {frontmatter.image && (
                        <figure class="image featured-image">
                            <img src={frontmatter.image.url} alt={frontmatter.image.alt} />
                        </figure>
                    )}

                    <div class="content">
                        <slot />
                    </div>
                </div>
            </div>
        </div>
    </article>
    <Footer />
</div>

<style>
    /* Light mode (default) */
    .blog-post {
        --text-color: #2c3e50;
        --bg-color: #ffffff;
        --tag-bg: #f5f5f5;
        --tag-color: #4a4a4a;
    }

    /* Dark mode */
    @media (prefers-color-scheme: dark) {
        .blog-post {
            --text-color: #ecf0f1;
            --bg-color: #1a1a1a;
            --tag-bg: #2c3e50;
            --tag-color: #ecf0f1;
        }
    }

    .blog-post {
        color: var(--text-color);
        background-color: var(--bg-color);
    }

    .post-header {
        margin-bottom: 2rem;  /* Reduced from 4rem to create better balance */
    }

    .post-meta {
        color: #666;
        font-size: 1.1rem;
        margin-top: 1.5rem;
        margin-bottom: 2rem;  /* Added spacing below meta info */
    }

    .featured-image {
        margin: 3rem 0 4rem;  /* Increased margins around image */
        border-radius: 12px;  /* Slightly larger radius */
        overflow: hidden;
        box-shadow: 0 8px 24px rgba(0,0,0,0.15);  /* Enhanced shadow */
    }

    .featured-image img {
        width: 100%;
        height: auto;
        display: block;  /* Removes any unwanted space below image */
        object-fit: cover;  /* Ensures proper image scaling */
    }

    .content {
        margin-top: 2rem;  /* Added space before content */
        line-height: 1.8;
        font-size: 1.1rem;
    }
    .has-shadow {
        box-shadow: 0 0.5em 1em -0.125em rgba(10,10,10,.1);
        border-radius: 6px;
    }

    .blog-post :global(h1),
    .blog-post :global(h2),
    .blog-post :global(h3),
    .blog-post :global(p),
    .blog-post :global(li) {
        word-break: break-word;
        overflow-wrap: break-word;
    }

    .blog-post :global(pre) {
        white-space: pre-wrap;
        word-wrap: break-word;
    }
</style>
