---
import { faBullhorn, faDesktop, faChartLine, faCamera, faComments } from '@fortawesome/free-solid-svg-icons';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
const services = [
    {
        icon: faBullhorn,
        title: "Marketing Digital para Veterinarias",
        description: "Estrategias digitales especializadas para clínicas veterinarias, tiendas de mascotas y servicios pet-friendly.",
        animation: "animation1"
    },
    {
        icon: faDesktop,
        title: "Webs para Veterinarias",
        description: "Diseño de páginas web profesionales para clínicas veterinarias, peluquerías caninas y servicios para mascotas.",
        animation: "animation2"
    },
    {
        icon: faChartLine,
        title: "Consultoría Pet Business",
        description: "Asesoramiento estratégico para hacer crecer tu negocio en el sector de mascotas y servicios veterinarios.",
        animation: "animation3"
    },
    {
        icon: faCamera,
        title: "Fotografía de Mascotas",
        description: "Sesiones fotográficas profesionales para tu clínica, productos y servicios relacionados con mascotas.",
        animation: "animation4"
    },
    {
        icon: faComments,
        title: "Redes Sociales Pet-Friendly",
        description: "Gestión especializada de redes sociales para negocios del sector mascota y veterinario.",
        animation: "animation5"
    }
];
---
<section class="section" id="services">
    <div class="container">
        <h2 class="title is-2 has-text-centered">Nuestros Servicios</h2>
        <div class="columns is-multiline mt-6 is-centered">
            {services.map((service, index) => (
                <div class="column is-12-mobile is-6-tablet is-4-desktop" 
                     style={index > 2 ? "display: none;" : ""} 
                     data-service>
                    <div class="box has-text-centered">
                        <span class={`icon is-large has-text-white animate-when-visible ${service.animation}`} style="filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.5));">
                            <FontAwesomeIcon icon={service.icon} size="2x" fixedWidth />
                        </span>
                        <h3 class="title is-4 my-4">{service.title}</h3>
                        <p class="subtitle is-6">{service.description}</p>
                    </div>
                </div>
            ))}
        </div>
        <div class="has-text-centered mt-4">
            <button class="button is-warning" id="showMoreBtn">Ver más servicios</button>
        </div>
    </div>
</section>

<style>
    :root {
        --animation-duration: 1s;
        --animation-ease: ease;
    }

    .box {
        transition: transform 0.3s;
        cursor: pointer;
    }
    .box:hover {
        transform: scale(1.05);
    }
    @keyframes rotateIcon {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    .animation1 {
        animation: rotateIcon var(--animation-duration) var(--animation-ease);
    }
    .animation2 {
        animation: webDesignPop 1.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }
    @keyframes webDesignPop {
        0% {
            transform: scale(1) translateY(0px);
            color: #333;
            filter: brightness(1);
        }
        40% {
            transform: scale(1.4) translateY(-15px);
            color: #ffd83d;
            filter: brightness(1.5) drop-shadow(0 0 10px rgba(255, 216, 61, 0.6));
        }
        60% {
            transform: scale(1.6) translateY(5px) rotate(5deg);
            color: #ffd83d;
            filter: brightness(2) drop-shadow(0 0 15px rgba(255, 216, 61, 0.8));
        }
        80% {
            transform: scale(1.3) translateY(-3px) rotate(-5deg);
            filter: brightness(1.8) drop-shadow(0 0 20px rgba(255, 216, 61, 0.9));
        }
        100% {
            transform: scale(1) translateY(0) rotate(0);
            color: #ffd83d;
            filter: brightness(1.2) drop-shadow(0 0 12px rgba(255, 216, 61, 0.5));
        }
    }
    @keyframes pulseAndSpin {
        0% { transform: scale(1) rotate(0deg); }
        50% { transform: scale(1.2) rotate(180deg); }
        100% { transform: scale(1) rotate(360deg); }
    }

    @keyframes floatAndFlip {
        0% { transform: translateY(0) rotateY(0deg); }
        50% { transform: translateY(-20px) rotateY(180deg); }
        100% { transform: translateY(0) rotateY(360deg); }
    }

    .animation3 {
        animation: consultingEffect 2.5s ease-in-out;
    }

    @keyframes consultingEffect {
        0% {
            transform: scale(0.8) translateY(0) rotate(0);
            filter: brightness(1);
            color: #ffd83d;
        }
        20% {
            transform: scale(1.2) translateY(-15px) rotate(180deg);
            filter: brightness(1.8) drop-shadow(0 0 15px rgba(255, 216, 61, 0.7));
            color: #ffaa00;
        }
        40% {
            transform: scale(1.1) translateY(10px) rotate(270deg);
            filter: brightness(2) drop-shadow(0 0 20px rgba(255, 216, 61, 0.9));
            color: #ff8c00;
        }
        60% {
            transform: scale(1.3) translateY(-5px) rotate(315deg);
            filter: brightness(1.5) drop-shadow(0 0 25px rgba(255, 216, 61, 0.8));
            color: #ffd700;
        }
        80% {
            transform: scale(0.9) translateY(5px) rotate(405deg);
            filter: brightness(1.7) drop-shadow(0 0 15px rgba(255, 216, 61, 0.6));
            color: #ffb700;
        }
        100% {
            transform: scale(1) translateY(0) rotate(360deg);
            filter: brightness(1.2) drop-shadow(0 0 10px rgba(255, 216, 61, 0.5));
            color: #ffd83d;
        }
    }

    .animation4 {
        animation: pulseAndSpin 1.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .animation5 {
        animation: floatAndFlip 3s ease-in-out;
    }
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-30px); }
        60% { transform: translateY(-15px); }
    }
    @keyframes shake {
        0% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        50% { transform: translateX(5px); }
        75% { transform: translateX(-5px); }
        100% { transform: translateX(0); }
    }
    @keyframes zoomIn {
        from { transform: scale(0); }
        to { transform: scale(1); }
    }
    @media screen and (min-width: 1024px) {
        #showMoreBtn {
            display: none;
        }
        [data-service] {
            display: block !important;
        }
    }
</style>

<script>
    // Definir constantes para animaciones
    const animations = ["animation1", "animation2", "animation3", "animation4", "animation5"];

    // Función para aplicar animación específica
    const applyAnimation = (icon: HTMLElement, animation: string) => {
        icon.classList.remove(...animations);
        void icon.offsetWidth; // Forzar reflow
        icon.classList.add(animation);
    };

    // Mantener el código existente del showMoreBtn
    const showMoreBtn = document.getElementById('showMoreBtn');
    if (showMoreBtn) {
        showMoreBtn.addEventListener('click', function() {
            const services = document.querySelectorAll('[data-service]');
            services.forEach(service => {
                (service as HTMLElement).style.display = 'block';
            });
            (this as HTMLElement).style.display = 'none';
        });
    }

    // Función para manejar la animación de iconos
    const boxes = document.querySelectorAll('.box');
    boxes.forEach((box, index) => {
        box.addEventListener('click', function(this: HTMLElement) {
            const icon = this.querySelector('.icon') as HTMLElement;
            if (icon) {
                const animation = `animation${index + 1}`;
                applyAnimation(icon, animation);
            }
        });
    });
</script>
