---
// ThemeButton.astro
---
<div class="is-flex is-justify-content-flex-end p-4" style="position: absolute; top: 1rem; right: 1rem; z-index: 100;">
    <button
        id="themeToggle"
        class="theme-toggle"
        aria-label="Toggle theme"
    >
        <span class="icon is-large">
            <i class="fas fa-sun fa-2x" id="lightIcon"></i>
            <i class="fas fa-moon fa-2x" id="darkIcon"></i>
        </span>
    </button>
</div>

<style>
    .theme-toggle {
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
        color: #000;

        & i {
            transition: transform 0.5s ease, opacity 0.3s ease-in-out;
            opacity: 1;
            visibility: visible;
        }
    }

    #darkIcon {
        opacity: 0;
        visibility: hidden;
        position: absolute;

        &.rotate {
            transform: rotate(360deg);
        }
    }

    #lightIcon {
        &.rotate {
            transform: rotate(360deg);
        }
    }

    :global(.dark) {
        & .theme-toggle {
            color: whitesmoke;
        }

        & #darkIcon {
            opacity: 1;
            visibility: visible;
            position: static;
        }

        & #lightIcon {
            opacity: 0;
            visibility: hidden;
            position: absolute;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Check and apply the saved theme
        const theme = (() => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                return localStorage.getItem('theme');
            }
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                return 'dark';
            }
            return 'light';
        })();

        if (theme === 'dark') {
            document.documentElement.classList.add('dark');
            document.body.classList.add('has-background-dark');
        }

        const themeToggle = document.getElementById('themeToggle');
        const lightIcon = document.getElementById('lightIcon');
        const darkIcon = document.getElementById('darkIcon');
        
        if (themeToggle) {
            themeToggle.addEventListener('click', () => {
                const isDark = document.documentElement.classList.toggle('dark');
                localStorage.setItem('theme', isDark ? 'dark' : 'light');

                if (isDark) {
                    document.body.classList.add('has-background-dark');
                } else {
                    document.body.classList.remove('has-background-dark');
                }

                // Añadir clase para la animación
                if (isDark && darkIcon) {
                    darkIcon.classList.add('rotate');
                } else if (lightIcon) {
                    lightIcon.classList.add('rotate');
                }

                // Remover la clase después de la animación
                setTimeout(() => {
                    if (lightIcon) lightIcon.classList.remove('rotate');
                    if (darkIcon) darkIcon.classList.remove('rotate');
                }, 500);
            });
        }
    });
</script>
